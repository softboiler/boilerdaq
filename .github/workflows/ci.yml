# Run static analysis and tests
name: "ci"
concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: True
on:
  workflow_dispatch:
  workflow_call:
  pull_request:
  push:
    branches: ["main"]
defaults:
  run:
    shell: "pwsh"
jobs:
  env:
    uses: "./.github/workflows/env.yml"
  sync:
    needs: "env"
    runs-on: "ubuntu-24.04"
    steps:
      - uses: "actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332" # v4.1.7
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@9f1f1fece28798fe5e7ece00f4243abe886974b2" # v3.0.0
        with:
          version: "${{ needs.env.outputs.uv_version }}"
          enable-cache: true
      - run: "./j.ps1 ci"
      - uses: "actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b" # v4.3.4
        with:
          name: "lock"
          path: |
            uv.lock
            requirements
  build-docs:
    needs: "env"
    runs-on: "${{ needs.env.outputs.actions_runner }}"
    steps:
      - uses: "actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332" # v4.1.7
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@9f1f1fece28798fe5e7ece00f4243abe886974b2" # v3.0.0
        with:
          version: "${{ needs.env.outputs.uv_version }}"
          enable-cache: true
      - run: "./j.ps1 ci tool-docs-build"
      - uses: "actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa" # v3.0.1
  deploy-docs:
    if: github.event_name != 'pull_request'
    needs: ["env", "build-docs"]
    permissions:
      pages: "write"
      id-token: "write"
    environment:
      name: "github-pages"
      url: "${{ steps.deployment.outputs.page_url }}"
    runs-on: "${{ needs.env.outputs.actions_runner }}"
    steps:
      - id: "deployment"
        uses: "actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e" # v4.0.5
  ruff:
    needs: "env"
    runs-on: "${{ needs.env.outputs.actions_runner }}"
    steps:
      - uses: "actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332" # v4.1.7
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@9f1f1fece28798fe5e7ece00f4243abe886974b2" # v3.0.0
        with:
          version: "${{ needs.env.outputs.uv_version }}"
          enable-cache: true
      - run: "./j.ps1 ci ruff --no-fix --output-format github"
  fawltydeps:
    needs: "env"
    runs-on: "${{ needs.env.outputs.actions_runner }}"
    steps:
      - uses: "actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332" # v4.1.7
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@9f1f1fece28798fe5e7ece00f4243abe886974b2" # v3.0.0
        with:
          version: "${{ needs.env.outputs.uv_version }}"
          enable-cache: true
      - run: |
          ./j.ps1 ci
          ./j.ps1 fawltydeps
          ./j.ps1 fawltydeps --config-file packages/_dev/pyproject.toml
  pyright:
    needs: "env"
    runs-on: "${{ needs.env.outputs.actions_runner }}"
    steps:
      - uses: "actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332" # v4.1.7
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@9f1f1fece28798fe5e7ece00f4243abe886974b2" # v3.0.0
        with:
          version: "${{ needs.env.outputs.uv_version }}"
          enable-cache: true
      - run: "./j.ps1 ci"
      - uses: "jakebailey/pyright-action@3bdde3b31d26f0f1f5de051b1fbd7a536a9a4e7f" # v2.3.1
        with:
          pylance-version: "${{ needs.env.outputs.pyright_python_pylance_version }}"
  test:
    needs: "env"
    strategy:
      matrix:
        runner:
          - "macos-15"
          - "ubuntu-24.04"
          - "windows-2025"
        python:
          - "3.11"
          - "3.12"
    runs-on: "${{ matrix.runner }}"
    steps:
      - uses: "actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332" # v4.1.7
        with:
          submodules: True
      - uses: "astral-sh/setup-uv@9f1f1fece28798fe5e7ece00f4243abe886974b2" # v3.0.0
        with:
          version: "${{ needs.env.outputs.uv_version }}"
          enable-cache: true
      # ! https://github.com/pytest-dev/pytest-cov/issues/479#issuecomment-1247444988
      - if: startsWith(matrix.runner, 'ubuntu') && matrix.python == needs.env.outputs.python_version
        run: "./j.ps1 ci pytest --cov --cov-config=pyproject.toml --cov-report=xml"
      - if: startsWith(matrix.runner, 'ubuntu') && matrix.python == needs.env.outputs.python_version
        uses: "codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673" # v4.5.0
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
      - if: (!(startsWith(matrix.runner, 'ubuntu') && matrix.python == needs.env.outputs.python_version))
        run: "./j.ps1 'python_version=${{ matrix.python }}' ci pytest"
